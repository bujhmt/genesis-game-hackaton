{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app.gateway.ts","webpack:///./src/app.module.ts","webpack:///../../libs/events/src/index.ts","webpack:///../../libs/events/src/lib/enums/events.enum.ts","webpack:///../../libs/events/src/lib/enums/index.ts","webpack:///../../libs/models/src/index.ts","webpack:///../../libs/models/src/lib/enums/direction.enum.ts","webpack:///../../libs/models/src/lib/enums/index.ts","webpack:///../../libs/models/src/lib/interfaces/index.ts","webpack:///../../libs/models/src/lib/interfaces/position.interface.ts","webpack:///../../libs/models/src/lib/interfaces/tank.interface.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/schedule\"","webpack:///external commonjs \"@nestjs/websockets\"","webpack:///external commonjs \"socket.io\"","webpack:///external commonjs \"socket.io-client\"","webpack:///external commonjs \"tslib\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import {\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  ConnectedSocket\n} from '@nestjs/websockets';\nimport {Server} from 'socket.io';\nimport {Tank} from '@game/models';\nimport {Socket} from 'socket.io-client';\nimport {Logger} from '@nestjs/common';\nimport {Events} from '@game/events';\nimport {Cron} from '@nestjs/schedule';\n\n@WebSocketGateway({cors: {origin: '*'}})\nexport class AppGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  private readonly logger = new Logger(AppGateway.name);\n  private readonly tanksMap = new Map<string, Tank>();\n\n  @WebSocketServer() server: Server;\n\n  @SubscribeMessage(Events.SAVE)\n  save(@MessageBody() tank: Tank, @ConnectedSocket() socket: Socket) {\n    this.tanksMap.set(socket.id, tank);\n    this.logger.log(`${socket.id} saved!`);\n  }\n\n  @Cron('* * * * * *')\n  synchronize() {\n    this.logger.log(`${Events.SYNCHRONIZE}. Tanks: ${this.tanksMap.size}.`);\n    this.server.emit(Events.SYNCHRONIZE, Array.from(this.tanksMap.values()));\n  }\n\n  handleConnection(socket: Socket) {\n    this.logger.log(`New connection! Id: ${socket.id}`);\n  }\n\n  handleDisconnect(socket: Socket) {\n    this.logger.log(`Socket was disconnected! Id: ${socket.id}`);\n\n    if (this.tanksMap.has(socket.id)) {\n      this.tanksMap.delete(socket.id)\n    }\n  }\n}\n","import {Module} from '@nestjs/common';\nimport {AppGateway} from './app.gateway';\nimport {ScheduleModule} from '@nestjs/schedule';\n\n@Module({\n  imports: [ScheduleModule.forRoot()],\n  providers: [AppGateway],\n})\nexport class AppModule {\n}\n","export * from './lib/enums';\n","export enum Events {\n  SAVE = 'SAVE',\n  SYNCHRONIZE = 'SYNCHRONIZE',\n}\n","export * from './events.enum';\n","export * from './lib/interfaces';\nexport * from './lib/enums';\n","export enum Direction {\n  LEFT = 'left',\n  RIGHT = 'right',\n  BOTTOM = 'bottom',\n  TOP = 'top',\n}\n","export * from './direction.enum';\n","export * from './tank.interface';\nexport * from './position.interface'\n","export interface Position {\n  x: number;\n  y: number;\n}\n","import {Position} from './position.interface';\nimport {Direction} from '../enums';\n\nexport interface Tank {\n  id: string,\n  position: Position\n  direction: Direction;\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/schedule\");","module.exports = require(\"@nestjs/websockets\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport {AppModule} from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n\n  Logger.log(`ðŸš€ Application is running on ${port} port`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}